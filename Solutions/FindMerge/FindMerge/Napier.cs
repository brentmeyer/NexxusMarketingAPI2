//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.33440.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="NapierSoap", Namespace="http://www.appatureinc.com/api/napier")]
public partial class Napier : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback GetOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpsertOperationCompleted;
    
    private System.Threading.SendOrPostCallback MatchOperationCompleted;
    
    private System.Threading.SendOrPostCallback SmartMergeOperationCompleted;
    
    private System.Threading.SendOrPostCallback MergeOperationCompleted;
    
    private System.Threading.SendOrPostCallback DescribeOperationCompleted;
    
    private System.Threading.SendOrPostCallback MergeExistingOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteOperationCompleted;
    
    private System.Threading.SendOrPostCallback ShowOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetServerTimestampOperationCompleted;
    
    /// <remarks/>
    public Napier() {
        this.Url = "https://api.appatureinc.com/api/napier.asmx";
    }
    
    /// <remarks/>
    public event GetCompletedEventHandler GetCompleted;
    
    /// <remarks/>
    public event CreateCompletedEventHandler CreateCompleted;
    
    /// <remarks/>
    public event UpdateCompletedEventHandler UpdateCompleted;
    
    /// <remarks/>
    public event UpsertCompletedEventHandler UpsertCompleted;
    
    /// <remarks/>
    public event MatchCompletedEventHandler MatchCompleted;
    
    /// <remarks/>
    public event SmartMergeCompletedEventHandler SmartMergeCompleted;
    
    /// <remarks/>
    public event MergeCompletedEventHandler MergeCompleted;
    
    /// <remarks/>
    public event DescribeCompletedEventHandler DescribeCompleted;
    
    /// <remarks/>
    public event MergeExistingCompletedEventHandler MergeExistingCompleted;
    
    /// <remarks/>
    public event DeleteCompletedEventHandler DeleteCompleted;
    
    /// <remarks/>
    public event ShowCompletedEventHandler ShowCompleted;
    
    /// <remarks/>
    public event GetServerTimestampCompletedEventHandler GetServerTimestampCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.appatureinc.com/api/napier/Get", RequestNamespace="http://www.appatureinc.com/api/napier", ResponseNamespace="http://www.appatureinc.com/api/napier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ResourceResponse Get(string TypeId, [System.Xml.Serialization.XmlArrayItemAttribute("Id")] string[] Ids) {
        object[] results = this.Invoke("Get", new object[] {
                    TypeId,
                    Ids});
        return ((ResourceResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGet(string TypeId, string[] Ids, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Get", new object[] {
                    TypeId,
                    Ids}, callback, asyncState);
    }
    
    /// <remarks/>
    public ResourceResponse EndGet(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ResourceResponse)(results[0]));
    }
    
    /// <remarks/>
    public void GetAsync(string TypeId, string[] Ids) {
        this.GetAsync(TypeId, Ids, null);
    }
    
    /// <remarks/>
    public void GetAsync(string TypeId, string[] Ids, object userState) {
        if ((this.GetOperationCompleted == null)) {
            this.GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationCompleted);
        }
        this.InvokeAsync("Get", new object[] {
                    TypeId,
                    Ids}, this.GetOperationCompleted, userState);
    }
    
    private void OnGetOperationCompleted(object arg) {
        if ((this.GetCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCompleted(this, new GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.appatureinc.com/api/napier/Create", RequestNamespace="http://www.appatureinc.com/api/napier", ResponseNamespace="http://www.appatureinc.com/api/napier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ResourceResponse Create(string TypeId, Resource[] Resources) {
        object[] results = this.Invoke("Create", new object[] {
                    TypeId,
                    Resources});
        return ((ResourceResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreate(string TypeId, Resource[] Resources, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Create", new object[] {
                    TypeId,
                    Resources}, callback, asyncState);
    }
    
    /// <remarks/>
    public ResourceResponse EndCreate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ResourceResponse)(results[0]));
    }
    
    /// <remarks/>
    public void CreateAsync(string TypeId, Resource[] Resources) {
        this.CreateAsync(TypeId, Resources, null);
    }
    
    /// <remarks/>
    public void CreateAsync(string TypeId, Resource[] Resources, object userState) {
        if ((this.CreateOperationCompleted == null)) {
            this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
        }
        this.InvokeAsync("Create", new object[] {
                    TypeId,
                    Resources}, this.CreateOperationCompleted, userState);
    }
    
    private void OnCreateOperationCompleted(object arg) {
        if ((this.CreateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.appatureinc.com/api/napier/Update", RequestNamespace="http://www.appatureinc.com/api/napier", ResponseNamespace="http://www.appatureinc.com/api/napier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ResourceResponse Update(string TypeId, Resource[] Resources, string IndexId) {
        object[] results = this.Invoke("Update", new object[] {
                    TypeId,
                    Resources,
                    IndexId});
        return ((ResourceResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdate(string TypeId, Resource[] Resources, string IndexId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Update", new object[] {
                    TypeId,
                    Resources,
                    IndexId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ResourceResponse EndUpdate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ResourceResponse)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateAsync(string TypeId, Resource[] Resources, string IndexId) {
        this.UpdateAsync(TypeId, Resources, IndexId, null);
    }
    
    /// <remarks/>
    public void UpdateAsync(string TypeId, Resource[] Resources, string IndexId, object userState) {
        if ((this.UpdateOperationCompleted == null)) {
            this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
        }
        this.InvokeAsync("Update", new object[] {
                    TypeId,
                    Resources,
                    IndexId}, this.UpdateOperationCompleted, userState);
    }
    
    private void OnUpdateOperationCompleted(object arg) {
        if ((this.UpdateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.appatureinc.com/api/napier/Upsert", RequestNamespace="http://www.appatureinc.com/api/napier", ResponseNamespace="http://www.appatureinc.com/api/napier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UpsertResponse Upsert(string TypeId, string IndexId, Resource[] Resources) {
        object[] results = this.Invoke("Upsert", new object[] {
                    TypeId,
                    IndexId,
                    Resources});
        return ((UpsertResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpsert(string TypeId, string IndexId, Resource[] Resources, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Upsert", new object[] {
                    TypeId,
                    IndexId,
                    Resources}, callback, asyncState);
    }
    
    /// <remarks/>
    public UpsertResponse EndUpsert(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UpsertResponse)(results[0]));
    }
    
    /// <remarks/>
    public void UpsertAsync(string TypeId, string IndexId, Resource[] Resources) {
        this.UpsertAsync(TypeId, IndexId, Resources, null);
    }
    
    /// <remarks/>
    public void UpsertAsync(string TypeId, string IndexId, Resource[] Resources, object userState) {
        if ((this.UpsertOperationCompleted == null)) {
            this.UpsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertOperationCompleted);
        }
        this.InvokeAsync("Upsert", new object[] {
                    TypeId,
                    IndexId,
                    Resources}, this.UpsertOperationCompleted, userState);
    }
    
    private void OnUpsertOperationCompleted(object arg) {
        if ((this.UpsertCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpsertCompleted(this, new UpsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.appatureinc.com/api/napier/Match", RequestNamespace="http://www.appatureinc.com/api/napier", ResponseNamespace="http://www.appatureinc.com/api/napier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public MatchResponse Match(string TypeId, Resource[] Resources, string SearchConfigId, string MatchConfigId) {
        object[] results = this.Invoke("Match", new object[] {
                    TypeId,
                    Resources,
                    SearchConfigId,
                    MatchConfigId});
        return ((MatchResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginMatch(string TypeId, Resource[] Resources, string SearchConfigId, string MatchConfigId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Match", new object[] {
                    TypeId,
                    Resources,
                    SearchConfigId,
                    MatchConfigId}, callback, asyncState);
    }
    
    /// <remarks/>
    public MatchResponse EndMatch(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MatchResponse)(results[0]));
    }
    
    /// <remarks/>
    public void MatchAsync(string TypeId, Resource[] Resources, string SearchConfigId, string MatchConfigId) {
        this.MatchAsync(TypeId, Resources, SearchConfigId, MatchConfigId, null);
    }
    
    /// <remarks/>
    public void MatchAsync(string TypeId, Resource[] Resources, string SearchConfigId, string MatchConfigId, object userState) {
        if ((this.MatchOperationCompleted == null)) {
            this.MatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMatchOperationCompleted);
        }
        this.InvokeAsync("Match", new object[] {
                    TypeId,
                    Resources,
                    SearchConfigId,
                    MatchConfigId}, this.MatchOperationCompleted, userState);
    }
    
    private void OnMatchOperationCompleted(object arg) {
        if ((this.MatchCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.MatchCompleted(this, new MatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.appatureinc.com/api/napier/SmartMerge", RequestNamespace="http://www.appatureinc.com/api/napier", ResponseNamespace="http://www.appatureinc.com/api/napier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UpsertResponse SmartMerge(string TypeId, Resource[] Resources, string SearchConfigId, string MatchConfigId, string MergeConfigId) {
        object[] results = this.Invoke("SmartMerge", new object[] {
                    TypeId,
                    Resources,
                    SearchConfigId,
                    MatchConfigId,
                    MergeConfigId});
        return ((UpsertResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSmartMerge(string TypeId, Resource[] Resources, string SearchConfigId, string MatchConfigId, string MergeConfigId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SmartMerge", new object[] {
                    TypeId,
                    Resources,
                    SearchConfigId,
                    MatchConfigId,
                    MergeConfigId}, callback, asyncState);
    }
    
    /// <remarks/>
    public UpsertResponse EndSmartMerge(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UpsertResponse)(results[0]));
    }
    
    /// <remarks/>
    public void SmartMergeAsync(string TypeId, Resource[] Resources, string SearchConfigId, string MatchConfigId, string MergeConfigId) {
        this.SmartMergeAsync(TypeId, Resources, SearchConfigId, MatchConfigId, MergeConfigId, null);
    }
    
    /// <remarks/>
    public void SmartMergeAsync(string TypeId, Resource[] Resources, string SearchConfigId, string MatchConfigId, string MergeConfigId, object userState) {
        if ((this.SmartMergeOperationCompleted == null)) {
            this.SmartMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmartMergeOperationCompleted);
        }
        this.InvokeAsync("SmartMerge", new object[] {
                    TypeId,
                    Resources,
                    SearchConfigId,
                    MatchConfigId,
                    MergeConfigId}, this.SmartMergeOperationCompleted, userState);
    }
    
    private void OnSmartMergeOperationCompleted(object arg) {
        if ((this.SmartMergeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SmartMergeCompleted(this, new SmartMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.appatureinc.com/api/napier/Merge", RequestNamespace="http://www.appatureinc.com/api/napier", ResponseNamespace="http://www.appatureinc.com/api/napier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ResourceResponse Merge(string TypeId, Resource[] Resources, [System.Xml.Serialization.XmlArrayItemAttribute("Ids")] string[] Ids, string MergeConfigId) {
        object[] results = this.Invoke("Merge", new object[] {
                    TypeId,
                    Resources,
                    Ids,
                    MergeConfigId});
        return ((ResourceResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginMerge(string TypeId, Resource[] Resources, string[] Ids, string MergeConfigId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Merge", new object[] {
                    TypeId,
                    Resources,
                    Ids,
                    MergeConfigId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ResourceResponse EndMerge(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ResourceResponse)(results[0]));
    }
    
    /// <remarks/>
    public void MergeAsync(string TypeId, Resource[] Resources, string[] Ids, string MergeConfigId) {
        this.MergeAsync(TypeId, Resources, Ids, MergeConfigId, null);
    }
    
    /// <remarks/>
    public void MergeAsync(string TypeId, Resource[] Resources, string[] Ids, string MergeConfigId, object userState) {
        if ((this.MergeOperationCompleted == null)) {
            this.MergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMergeOperationCompleted);
        }
        this.InvokeAsync("Merge", new object[] {
                    TypeId,
                    Resources,
                    Ids,
                    MergeConfigId}, this.MergeOperationCompleted, userState);
    }
    
    private void OnMergeOperationCompleted(object arg) {
        if ((this.MergeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.MergeCompleted(this, new MergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.appatureinc.com/api/napier/Describe", RequestNamespace="http://www.appatureinc.com/api/napier", ResponseNamespace="http://www.appatureinc.com/api/napier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public DescribeResponse Describe(string TypeId) {
        object[] results = this.Invoke("Describe", new object[] {
                    TypeId});
        return ((DescribeResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDescribe(string TypeId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Describe", new object[] {
                    TypeId}, callback, asyncState);
    }
    
    /// <remarks/>
    public DescribeResponse EndDescribe(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((DescribeResponse)(results[0]));
    }
    
    /// <remarks/>
    public void DescribeAsync(string TypeId) {
        this.DescribeAsync(TypeId, null);
    }
    
    /// <remarks/>
    public void DescribeAsync(string TypeId, object userState) {
        if ((this.DescribeOperationCompleted == null)) {
            this.DescribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDescribeOperationCompleted);
        }
        this.InvokeAsync("Describe", new object[] {
                    TypeId}, this.DescribeOperationCompleted, userState);
    }
    
    private void OnDescribeOperationCompleted(object arg) {
        if ((this.DescribeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DescribeCompleted(this, new DescribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.appatureinc.com/api/napier/MergeExisting", RequestNamespace="http://www.appatureinc.com/api/napier", ResponseNamespace="http://www.appatureinc.com/api/napier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public MergeExistingResponse MergeExisting(string TypeId, [System.Xml.Serialization.XmlArrayItemAttribute("MergeResource")] MergeSpecification[] MergeResources, string MergeConfigId) {
        object[] results = this.Invoke("MergeExisting", new object[] {
                    TypeId,
                    MergeResources,
                    MergeConfigId});
        return ((MergeExistingResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginMergeExisting(string TypeId, MergeSpecification[] MergeResources, string MergeConfigId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("MergeExisting", new object[] {
                    TypeId,
                    MergeResources,
                    MergeConfigId}, callback, asyncState);
    }
    
    /// <remarks/>
    public MergeExistingResponse EndMergeExisting(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MergeExistingResponse)(results[0]));
    }
    
    /// <remarks/>
    public void MergeExistingAsync(string TypeId, MergeSpecification[] MergeResources, string MergeConfigId) {
        this.MergeExistingAsync(TypeId, MergeResources, MergeConfigId, null);
    }
    
    /// <remarks/>
    public void MergeExistingAsync(string TypeId, MergeSpecification[] MergeResources, string MergeConfigId, object userState) {
        if ((this.MergeExistingOperationCompleted == null)) {
            this.MergeExistingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMergeExistingOperationCompleted);
        }
        this.InvokeAsync("MergeExisting", new object[] {
                    TypeId,
                    MergeResources,
                    MergeConfigId}, this.MergeExistingOperationCompleted, userState);
    }
    
    private void OnMergeExistingOperationCompleted(object arg) {
        if ((this.MergeExistingCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.MergeExistingCompleted(this, new MergeExistingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.appatureinc.com/api/napier/Delete", RequestNamespace="http://www.appatureinc.com/api/napier", ResponseNamespace="http://www.appatureinc.com/api/napier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public DeleteResponse Delete(string TypeId, [System.Xml.Serialization.XmlArrayItemAttribute("Id")] string[] Ids) {
        object[] results = this.Invoke("Delete", new object[] {
                    TypeId,
                    Ids});
        return ((DeleteResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDelete(string TypeId, string[] Ids, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Delete", new object[] {
                    TypeId,
                    Ids}, callback, asyncState);
    }
    
    /// <remarks/>
    public DeleteResponse EndDelete(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((DeleteResponse)(results[0]));
    }
    
    /// <remarks/>
    public void DeleteAsync(string TypeId, string[] Ids) {
        this.DeleteAsync(TypeId, Ids, null);
    }
    
    /// <remarks/>
    public void DeleteAsync(string TypeId, string[] Ids, object userState) {
        if ((this.DeleteOperationCompleted == null)) {
            this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
        }
        this.InvokeAsync("Delete", new object[] {
                    TypeId,
                    Ids}, this.DeleteOperationCompleted, userState);
    }
    
    private void OnDeleteOperationCompleted(object arg) {
        if ((this.DeleteCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.appatureinc.com/api/napier/Show", RequestNamespace="http://www.appatureinc.com/api/napier", ResponseNamespace="http://www.appatureinc.com/api/napier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ShowResponse Show() {
        object[] results = this.Invoke("Show", new object[0]);
        return ((ShowResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginShow(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Show", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public ShowResponse EndShow(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ShowResponse)(results[0]));
    }
    
    /// <remarks/>
    public void ShowAsync() {
        this.ShowAsync(null);
    }
    
    /// <remarks/>
    public void ShowAsync(object userState) {
        if ((this.ShowOperationCompleted == null)) {
            this.ShowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowOperationCompleted);
        }
        this.InvokeAsync("Show", new object[0], this.ShowOperationCompleted, userState);
    }
    
    private void OnShowOperationCompleted(object arg) {
        if ((this.ShowCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ShowCompleted(this, new ShowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.appatureinc.com/api/napier/GetServerTimestamp", RequestNamespace="http://www.appatureinc.com/api/napier", ResponseNamespace="http://www.appatureinc.com/api/napier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ServerTimestampResponse GetServerTimestamp() {
        object[] results = this.Invoke("GetServerTimestamp", new object[0]);
        return ((ServerTimestampResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetServerTimestamp(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetServerTimestamp", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public ServerTimestampResponse EndGetServerTimestamp(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ServerTimestampResponse)(results[0]));
    }
    
    /// <remarks/>
    public void GetServerTimestampAsync() {
        this.GetServerTimestampAsync(null);
    }
    
    /// <remarks/>
    public void GetServerTimestampAsync(object userState) {
        if ((this.GetServerTimestampOperationCompleted == null)) {
            this.GetServerTimestampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerTimestampOperationCompleted);
        }
        this.InvokeAsync("GetServerTimestamp", new object[0], this.GetServerTimestampOperationCompleted, userState);
    }
    
    private void OnGetServerTimestampOperationCompleted(object arg) {
        if ((this.GetServerTimestampCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetServerTimestampCompleted(this, new GetServerTimestampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class ResourceResponse {
    
    private string errorMessageField;
    
    private ResourceOperationResult[] resourcesField;
    
    private bool batchCompletedField;
    
    private string requestIdField;
    
    private string errorStringField;
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("ResourceStatus")]
    public ResourceOperationResult[] Resources {
        get {
            return this.resourcesField;
        }
        set {
            this.resourcesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool BatchCompleted {
        get {
            return this.batchCompletedField;
        }
        set {
            this.batchCompletedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RequestId {
        get {
            return this.requestIdField;
        }
        set {
            this.requestIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ErrorString {
        get {
            return this.errorStringField;
        }
        set {
            this.errorStringField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpsertOperationResult))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class ResourceOperationResult {
    
    private string errorMessageField;
    
    private Resource resourceField;
    
    private bool operationSucceededField;
    
    private string errorStringField;
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    public Resource Resource {
        get {
            return this.resourceField;
        }
        set {
            this.resourceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool OperationSucceeded {
        get {
            return this.operationSucceededField;
        }
        set {
            this.operationSucceededField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ErrorString {
        get {
            return this.errorStringField;
        }
        set {
            this.errorStringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class Resource : SerializableDictionary {
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Resource))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class SerializableDictionary {
    
    private FieldValuePair[] fieldField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Field", IsNullable=true)]
    public FieldValuePair[] Field {
        get {
            return this.fieldField;
        }
        set {
            this.fieldField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class FieldValuePair {
    
    private string idField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class ServerTimestampResponse {
    
    private string errorMessageField;
    
    private System.DateTime serverTimestampField;
    
    private bool batchCompletedField;
    
    private string requestIdField;
    
    private string errorStringField;
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime ServerTimestamp {
        get {
            return this.serverTimestampField;
        }
        set {
            this.serverTimestampField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool BatchCompleted {
        get {
            return this.batchCompletedField;
        }
        set {
            this.batchCompletedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RequestId {
        get {
            return this.requestIdField;
        }
        set {
            this.requestIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ErrorString {
        get {
            return this.errorStringField;
        }
        set {
            this.errorStringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class ShowResponse {
    
    private string errorMessageField;
    
    private string[] typeIdsField;
    
    private bool batchCompletedField;
    
    private string requestIdField;
    
    private string errorStringField;
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("TypeId")]
    public string[] TypeIds {
        get {
            return this.typeIdsField;
        }
        set {
            this.typeIdsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool BatchCompleted {
        get {
            return this.batchCompletedField;
        }
        set {
            this.batchCompletedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RequestId {
        get {
            return this.requestIdField;
        }
        set {
            this.requestIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ErrorString {
        get {
            return this.errorStringField;
        }
        set {
            this.errorStringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class DeleteResponse {
    
    private string errorMessageField;
    
    private IdOperationResult[] resultsField;
    
    private bool batchCompletedField;
    
    private string requestIdField;
    
    private string errorStringField;
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Result")]
    public IdOperationResult[] Results {
        get {
            return this.resultsField;
        }
        set {
            this.resultsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool BatchCompleted {
        get {
            return this.batchCompletedField;
        }
        set {
            this.batchCompletedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RequestId {
        get {
            return this.requestIdField;
        }
        set {
            this.requestIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ErrorString {
        get {
            return this.errorStringField;
        }
        set {
            this.errorStringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class IdOperationResult {
    
    private string errorMessageField;
    
    private bool operationSucceededField;
    
    private string errorStringField;
    
    private string idField;
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool OperationSucceeded {
        get {
            return this.operationSucceededField;
        }
        set {
            this.operationSucceededField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ErrorString {
        get {
            return this.errorStringField;
        }
        set {
            this.errorStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class MergeExistingResult {
    
    private IdOperationResult[] resultsField;
    
    private string errorMessageField;
    
    private string errorStringField;
    
    private bool operationSucceededField;
    
    private string winnerIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Result")]
    public IdOperationResult[] Results {
        get {
            return this.resultsField;
        }
        set {
            this.resultsField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorString {
        get {
            return this.errorStringField;
        }
        set {
            this.errorStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool OperationSucceeded {
        get {
            return this.operationSucceededField;
        }
        set {
            this.operationSucceededField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string WinnerId {
        get {
            return this.winnerIdField;
        }
        set {
            this.winnerIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class MergeExistingResponse {
    
    private string errorMessageField;
    
    private MergeExistingResult[] resultsField;
    
    private bool batchCompletedField;
    
    private string requestIdField;
    
    private string errorStringField;
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Result")]
    public MergeExistingResult[] Results {
        get {
            return this.resultsField;
        }
        set {
            this.resultsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool BatchCompleted {
        get {
            return this.batchCompletedField;
        }
        set {
            this.batchCompletedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RequestId {
        get {
            return this.requestIdField;
        }
        set {
            this.requestIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ErrorString {
        get {
            return this.errorStringField;
        }
        set {
            this.errorStringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class MergeSpecification {
    
    private string externalIdNameField;
    
    private string winnerIdField;
    
    private string[] idsToMergeField;
    
    /// <remarks/>
    public string ExternalIdName {
        get {
            return this.externalIdNameField;
        }
        set {
            this.externalIdNameField = value;
        }
    }
    
    /// <remarks/>
    public string WinnerId {
        get {
            return this.winnerIdField;
        }
        set {
            this.winnerIdField = value;
        }
    }
    
    /// <remarks/>
    public string[] IdsToMerge {
        get {
            return this.idsToMergeField;
        }
        set {
            this.idsToMergeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class Index {
    
    private string[] fieldsField;
    
    private string nameField;
    
    private IndexConstraint constraintField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Field")]
    public string[] Fields {
        get {
            return this.fieldsField;
        }
        set {
            this.fieldsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public IndexConstraint Constraint {
        get {
            return this.constraintField;
        }
        set {
            this.constraintField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public enum IndexConstraint {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Unique,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class FieldDescription {
    
    private string[] allowedValuesField;
    
    private string fieldIdField;
    
    private FieldType typeField;
    
    private int maxLengthField;
    
    private string defaultField;
    
    private bool isPrimaryKeyField;
    
    private bool isNullableField;
    
    private bool isReadOnlyField;
    
    private bool isImmutableField;
    
    public FieldDescription() {
        this.maxLengthField = 0;
        this.isPrimaryKeyField = false;
        this.isReadOnlyField = false;
        this.isImmutableField = false;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Value")]
    public string[] AllowedValues {
        get {
            return this.allowedValuesField;
        }
        set {
            this.allowedValuesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string FieldId {
        get {
            return this.fieldIdField;
        }
        set {
            this.fieldIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public FieldType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int MaxLength {
        get {
            return this.maxLengthField;
        }
        set {
            this.maxLengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Default {
        get {
            return this.defaultField;
        }
        set {
            this.defaultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsPrimaryKey {
        get {
            return this.isPrimaryKeyField;
        }
        set {
            this.isPrimaryKeyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool IsNullable {
        get {
            return this.isNullableField;
        }
        set {
            this.isNullableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsReadOnly {
        get {
            return this.isReadOnlyField;
        }
        set {
            this.isReadOnlyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsImmutable {
        get {
            return this.isImmutableField;
        }
        set {
            this.isImmutableField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public enum FieldType {
    
    /// <remarks/>
    Undefined,
    
    /// <remarks/>
    String,
    
    /// <remarks/>
    SingleSelect,
    
    /// <remarks/>
    MultiSelect,
    
    /// <remarks/>
    Integer,
    
    /// <remarks/>
    UnsignedInteger,
    
    /// <remarks/>
    Long,
    
    /// <remarks/>
    UnsignedLong,
    
    /// <remarks/>
    Decimal,
    
    /// <remarks/>
    Date,
    
    /// <remarks/>
    DateTime,
    
    /// <remarks/>
    Email,
    
    /// <remarks/>
    PhoneNumber,
    
    /// <remarks/>
    Currency,
    
    /// <remarks/>
    Boolean,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class DescribeResponse {
    
    private string errorMessageField;
    
    private FieldDescription[] fieldsField;
    
    private Index[] indexesField;
    
    private Operation[] allowedOperationsField;
    
    private bool batchCompletedField;
    
    private string requestIdField;
    
    private string errorStringField;
    
    private string typeIdField;
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Field")]
    public FieldDescription[] Fields {
        get {
            return this.fieldsField;
        }
        set {
            this.fieldsField = value;
        }
    }
    
    /// <remarks/>
    public Index[] Indexes {
        get {
            return this.indexesField;
        }
        set {
            this.indexesField = value;
        }
    }
    
    /// <remarks/>
    public Operation[] AllowedOperations {
        get {
            return this.allowedOperationsField;
        }
        set {
            this.allowedOperationsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool BatchCompleted {
        get {
            return this.batchCompletedField;
        }
        set {
            this.batchCompletedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RequestId {
        get {
            return this.requestIdField;
        }
        set {
            this.requestIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ErrorString {
        get {
            return this.errorStringField;
        }
        set {
            this.errorStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeId {
        get {
            return this.typeIdField;
        }
        set {
            this.typeIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public enum Operation {
    
    /// <remarks/>
    Create,
    
    /// <remarks/>
    Update,
    
    /// <remarks/>
    Delete,
    
    /// <remarks/>
    Upsert,
    
    /// <remarks/>
    Get,
    
    /// <remarks/>
    Find,
    
    /// <remarks/>
    Match,
    
    /// <remarks/>
    Merge,
    
    /// <remarks/>
    FindBySegment,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class InternalMatchOperationResultDetail {
    
    private Resource internalMatchedResourceField;
    
    private DeduplicationMatchType matchTypeField;
    
    private double scoreField;
    
    /// <remarks/>
    public Resource InternalMatchedResource {
        get {
            return this.internalMatchedResourceField;
        }
        set {
            this.internalMatchedResourceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeduplicationMatchType MatchType {
        get {
            return this.matchTypeField;
        }
        set {
            this.matchTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public double Score {
        get {
            return this.scoreField;
        }
        set {
            this.scoreField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public enum DeduplicationMatchType {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    New,
    
    /// <remarks/>
    Duplicate,
    
    /// <remarks/>
    InternalDuplicate,
    
    /// <remarks/>
    PotentialDuplicate,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class MatchOperationResultDetail {
    
    private DeduplicationMatchType matchTypeField;
    
    private double scoreField;
    
    private string matchedResourceIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeduplicationMatchType MatchType {
        get {
            return this.matchTypeField;
        }
        set {
            this.matchTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public double Score {
        get {
            return this.scoreField;
        }
        set {
            this.scoreField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string MatchedResourceId {
        get {
            return this.matchedResourceIdField;
        }
        set {
            this.matchedResourceIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class MatchOperationResult {
    
    private string errorMessageField;
    
    private Resource bestMatchResourceField;
    
    private MatchOperationResultDetail[] matchDetailsField;
    
    private InternalMatchOperationResultDetail[] internalMatchDetailsField;
    
    private bool operationSucceededField;
    
    private string errorStringField;
    
    private DeduplicationMatchType bestMatchTypeField;
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    public Resource BestMatchResource {
        get {
            return this.bestMatchResourceField;
        }
        set {
            this.bestMatchResourceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("MatchDetail")]
    public MatchOperationResultDetail[] MatchDetails {
        get {
            return this.matchDetailsField;
        }
        set {
            this.matchDetailsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("InternalMatchDetail")]
    public InternalMatchOperationResultDetail[] InternalMatchDetails {
        get {
            return this.internalMatchDetailsField;
        }
        set {
            this.internalMatchDetailsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool OperationSucceeded {
        get {
            return this.operationSucceededField;
        }
        set {
            this.operationSucceededField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ErrorString {
        get {
            return this.errorStringField;
        }
        set {
            this.errorStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeduplicationMatchType BestMatchType {
        get {
            return this.bestMatchTypeField;
        }
        set {
            this.bestMatchTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class MatchResponse {
    
    private string errorMessageField;
    
    private MatchOperationResult[] resultsField;
    
    private bool batchCompletedField;
    
    private string requestIdField;
    
    private string errorStringField;
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("MatchStatus")]
    public MatchOperationResult[] Results {
        get {
            return this.resultsField;
        }
        set {
            this.resultsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool BatchCompleted {
        get {
            return this.batchCompletedField;
        }
        set {
            this.batchCompletedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RequestId {
        get {
            return this.requestIdField;
        }
        set {
            this.requestIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ErrorString {
        get {
            return this.errorStringField;
        }
        set {
            this.errorStringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class UpsertResponse {
    
    private string errorMessageField;
    
    private UpsertOperationResult[] resourcesField;
    
    private bool batchCompletedField;
    
    private string requestIdField;
    
    private string errorStringField;
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("ResourceStatus")]
    public UpsertOperationResult[] Resources {
        get {
            return this.resourcesField;
        }
        set {
            this.resourcesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool BatchCompleted {
        get {
            return this.batchCompletedField;
        }
        set {
            this.batchCompletedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RequestId {
        get {
            return this.requestIdField;
        }
        set {
            this.requestIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ErrorString {
        get {
            return this.errorStringField;
        }
        set {
            this.errorStringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public partial class UpsertOperationResult : ResourceOperationResult {
    
    private UpsertResult upsertResultField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public UpsertResult UpsertResult {
        get {
            return this.upsertResultField;
        }
        set {
            this.upsertResultField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.appatureinc.com/api/napier")]
public enum UpsertResult {
    
    /// <remarks/>
    Error,
    
    /// <remarks/>
    Create,
    
    /// <remarks/>
    Update,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetCompletedEventHandler(object sender, GetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ResourceResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ResourceResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ResourceResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ResourceResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ResourceResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ResourceResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void UpsertCompletedEventHandler(object sender, UpsertCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UpsertResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UpsertResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void MatchCompletedEventHandler(object sender, MatchCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal MatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public MatchResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MatchResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void SmartMergeCompletedEventHandler(object sender, SmartMergeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SmartMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SmartMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UpsertResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UpsertResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void MergeCompletedEventHandler(object sender, MergeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal MergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ResourceResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ResourceResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void DescribeCompletedEventHandler(object sender, DescribeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DescribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DescribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public DescribeResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((DescribeResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void MergeExistingCompletedEventHandler(object sender, MergeExistingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MergeExistingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal MergeExistingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public MergeExistingResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MergeExistingResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public DeleteResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((DeleteResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void ShowCompletedEventHandler(object sender, ShowCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ShowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ShowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ShowResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ShowResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetServerTimestampCompletedEventHandler(object sender, GetServerTimestampCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetServerTimestampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetServerTimestampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ServerTimestampResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ServerTimestampResponse)(this.results[0]));
        }
    }
}
